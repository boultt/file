def water_jug_problem(jug1_cap, jug2_cap, target):

    visited = set()
    queue = [(0, 0, [])] 

    while queue:
        jug1, jug2, path = queue.pop(0)

        if (jug1, jug2) in visited:
            continue
        visited.add((jug1, jug2))

        if jug1 == target or jug2 == target:
            return path + [(jug1, jug2)]

        actions = [
            (jug1_cap, jug2),  
            (jug1, jug2_cap),  
            (0, jug2),  
            (jug1, 0), 
            (min(jug1 + jug2, jug1_cap), max(0, jug1 + jug2 - jug1_cap)),  
            (max(0, jug1 + jug2 - jug2_cap), min(jug1 + jug2, jug2_cap)),  
        ]

        for next_jug1, next_jug2 in actions:
            if (next_jug1, next_jug2) not in visited:
                queue.append((next_jug1, next_jug2, path + [(jug1, jug2)]))

    return None


jug1_capacity = 4
jug2_capacity = 3
target_amount = 2

solution = water_jug_problem(jug1_capacity, jug2_capacity, target_amount)

if solution:
    print("Steps to reach the target:")
    for step in solution:
        print(f"Jug 1: {step[0]}, Jug 2: {step[1]}")
else:
    print("Target amount is not reachable.")